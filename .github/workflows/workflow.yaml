name: Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
      - run: npm ci
      - run: npm run lint

  # check-format:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version-file: ".nvmrc"
  #         cache: "npm"
  #     - run: npm ci
  #     - uses: denoland/setup-deno@v1
  #       with:
  #         deno-version: v1.x
  #     - run: deno fmt --check

  build:
    runs-on: ubuntu-latest
    # needs: [lint, check-format]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
      - run: npm ci
      # - uses: denoland/setup-deno@v1
      #   with:
      #     deno-version: v1.x
      - run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: |
            build
            public

  # deploy:
  #   if: ${{ !contains(github.event.head_commit.message, '[skip deploy]') }}
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: denoland/setup-deno@v1
  #       with:
  #         deno-version: v1.x
  #     - run: deno install --allow-read --allow-write --allow-env --allow-net --allow-run --no-check -r -f https://deno.land/x/deploy/deployctl.ts
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: my-artifact
  #     - name: Preview deployment
  #       id: deployment
  #       if: ${{ github.event_name == 'pull_request' }}
  #       env:
  #         DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}
  #       run: |
  #         DEPLOY_OUTPUT=$(deployctl deploy --include=build,public --project=joepkockelkorn ./build/index.js)
  #         echo "DEPLOY_OUTPUT<<EOF" >> $GITHUB_ENV
  #         echo "$DEPLOY_OUTPUT" >> $GITHUB_ENV
  #         echo "EOF" >> $GITHUB_ENV
  #     - name: Capture preview url
  #       id: capture_preview_url
  #       if: ${{ github.event_name == 'pull_request' }}
  #       env:
  #         DEPLOY_OUTPUT: ${{ env.DEPLOY_OUTPUT }}
  #       run: |
  #         URL=$(echo "${{ env.DEPLOY_OUTPUT }}" | egrep -o "https:\/\/joepkockelkorn-.*\.deno\.dev")
  #         echo "DEPLOYMENT_URL=$URL" >> $GITHUB_OUTPUT
  #     - name: Post preview url comment on PR
  #       if: ${{ github.event_name == 'pull_request' }}
  #       uses: peter-evans/create-or-update-comment@v2
  #       with:
  #         issue-number: ${{ github.event.pull_request.number }}
  #         body: |
  #           [Preview is deployed here](${{ steps.capture_preview_url.outputs.DEPLOYMENT_URL }})
  #     - name: Production deployment
  #       if: ${{ github.event_name != 'pull_request' }}
  #       env:
  #         DENO_DEPLOY_TOKEN: ${{ secrets.DENO_DEPLOY_TOKEN }}
  #       run: deployctl deploy --prod --include=build,public --project=joepkockelkorn ./build/index.js
